{erl_opts, [debug_info, warn_export_vars, warn_shadow_vars, warn_obsolete_guard]}.
{shell, [{config, "config/kafe.config"}]}.

{plugins, [
           {rebar3_elixir, "~> 0.1.1"},
           rebar3_hex,
           rebar3_lint
          ]}.

{elixir_bindings, [
                   {kafe, [{except, [topics
                                     , partitions
                                     , max_offset
                                     , partition_for_offset
                                     , api_version
                                     , number_of_brokers
                                     , update_brokers]}]},
                   {kafe_consumer, [{except, [start_link
                                              , init
                                              , can_fetch]}]},
                   {kafe_consumer_subscriber, [{except, [start_link,
                                                         init,
                                                         handle_call,
                                                         handle_cast,
                                                         handle_info,
                                                         terminate,
                                                         code_change]}]}

                   ]}.

{elixir_records, [
                  {'Kafe.Records', [{message, "kafe/include/kafe_consumer.hrl"}]}
                 ]}.

{deps, [
  {lager, "~> 3.2.0"},
  {bucs, "~> 1.0.3"},
  {doteki, "~> 1.0.3"},
  {poolgirl, "~> 1.1.1"},
  {bristow, "~> 0.2.1"},
  {metrics, "~> 2.2.0"}
 ]}.

{eunit_opts, [no_tty, {report, {unite_compact, [profile]}}]}.
{cover_enabled, true}.

{profiles, [
            {test, [
                    {deps, [
                            meck,
                            {unite, "", {git, "git://github.com/basho/unite.git"}}
                           ]}
                   ]},
            {dev_metrics, [
                   {deps, [
                           {folsom, "~> 0.8.3"},
                           {xprof, ".*", {git, "https://github.com/mniec/xprof.git"}}
                          ]}
                  ]},
            {docs, [
                    {deps, [
                            {edown, {git, "https://github.com/botsunit/edown.git", {branch, "master"}}}
                           ]},
                    {edoc_opts, [
                                 {doclet, edown_doclet}
                                 , {app_default, "http://www.erlang.org/doc/man"}
                                 , {source_path, ["src"]}
                                 , {overview, "overview.edoc"}
                                 , {stylesheet, ""}
                                 , {image, ""}
                                 , {top_level_readme, {"./README.md", "https://github.com/botsunit/kafe"}}
                                ]}
                   ]},
            {release, [
                       {elvis, [
                        #{dirs => ["."],
                          filter => "rebar.config",
                          rules => [{elvis_project, no_deps_master_rebar, []}]}]}
                      ]}
           ]}.

{elvis,
   [#{dirs => ["src", "test"],
      filter => "*.erl",
      rules => [{elvis_style, line_length, #{limit => 180}},
                {elvis_style, no_tabs},
                {elvis_style, no_trailing_whitespace},
                {elvis_style, macro_names},
                {elvis_style, macro_module_names},
                {elvis_style, dont_repeat_yourself, #{min_complexity => 25}},
                {elvis_style, operator_spaces, #{rules => [{right, ","},
                                                           {right, "++"},
                                                           {left, "++"}]}}]}]}.

{xref_warnings, false}.
{xref_extra_paths, []}.
{xref_checks, [undefined_function_calls
               , undefined_functions
               , locals_not_used
%               , exports_not_used
               , deprecated_function_calls
               , deprecated_functions]}.

